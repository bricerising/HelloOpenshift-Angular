apiVersion: v1
kind: Template
metadata:
  name: hello-openshift
parameters:
- name: APP_NAME
  description: The name assigned to all of the application objects defined in this template.
  displayName: Application Name
  required: true
  value: hello-openshift-app
- name: GIT_SOURCE_URL
  description: The source URL for the application
  displayName: Source URL
  required: true
  value: "https://github.com/bricerising/HelloOpenshift-Angular.git"
- name: GIT_SOURCE_REF
  description: The source Ref for the application
  displayName: Source Ref
  required: true
  value: master
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: "BuildConfig"
  metadata:
    creationTimestamp: null
    labels:
      name: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    source:
      git:
        uri: ${GIT_SOURCE_URL}
        ref: ${GIT_SOURCE_REF}
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: jenkins/commit.Jenkinsfile
      type: JenkinsPipeline
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-docker
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source: 
      type: Binary
    strategy:
      dockerStrategy:
        noCache: true
        dockerfilePath: Dockerfile
      type: Docker
    triggers: []
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}-configmap-env
  data:
    SPRING_PROFILES_ACTIVE: int_dc4
    MONGO_DB_HOSTNAME: mongodb.containerpoc.com
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${APP_NAME}-secret-env
  type: Opaque
  data:
    MONGO_DB_PASSWORD: czNjdXJlUGFzc3dvcmQ=
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: docker-registry.default.svc:5000/hello-openshift/${APP_NAME}:latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-configmap-env
            - secretRef:
                name: ${APP_NAME}-secret-env
          ports:
          - containerPort: 9014
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
          namespace: hello-openshift
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: ${APP_NAME}-port
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_NAME}-route
    labels:
      app: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    port:
      targetPort: ${APP_NAME}-port
    wildcardPolicy: None





